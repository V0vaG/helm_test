apiVersion: v1
kind: Namespace
metadata:
  name: vhub
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: vhub-data-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /home/vova/script_files/vhub
  storageClassName: ""
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: vhub-data-pvc
  namespace: vhub
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
  volumeName: vhub-data-pv
  storageClassName: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vhub-deployment
  namespace: vhub
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vhub
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 1
  template:
    metadata:
      labels:
        app: vhub
    spec:
      imagePullSecrets:
      - name: dockerhub-secret 
      containers:
      - name: vhub
        image: vova0911/vhub:amd64_1.0.18
        ports:
        - containerPort: 5000
        securityContext:
          privileged: true
        volumeMounts:
        - name: data-volume
          mountPath: /root/script_files/vhub
        - name: docker-socket
          mountPath: /var/run/docker.sock
        - name: docker-bin
          mountPath: /usr/bin/docker
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: vhub-data-pvc
      - name: docker-socket
        hostPath:
          path: /var/run/docker.sock
      - name: docker-bin
        hostPath:
          path: /usr/bin/docker
---
apiVersion: v1
kind: Service
metadata:
  name: vhub-service
  namespace: vhub
spec:
  selector:
    app: vhub
  ports:
    - protocol: TCP
      port: 80
      targetPort: 5000
      nodePort: 30087
  type: NodePort
---
apiVersion: batch/v1
kind: Job
metadata:
  name: docker-push-job
spec:
  template:
    spec:
      containers:
      - name: docker
        image: docker:latest  # Uses a container with Docker installed
        command: ["/bin/sh", "-c"]
        args:
          - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin &&
            docker build -t vova0911/topix:latest . &&
            docker push vova0911/topix:latest
        env:
          - name: DOCKER_USERNAME
            valueFrom:
              secretKeyRef:
                name: dockerhub-secret
                key: username
          - name: DOCKER_PASSWORD
            valueFrom:
              secretKeyRef:
                name: dockerhub-secret
                key: password
      restartPolicy: Never
  backoffLimit: 1

