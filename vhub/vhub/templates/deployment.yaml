apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "vhub.fullname" . }}-deployment
  labels:
  {{- include "vhub.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.deployment.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: {{ .Values.deployment.strategy.rollingUpdate.maxSurge | quote }}
      maxUnavailable: {{ .Values.deployment.strategy.rollingUpdate.maxUnavailable }}
    type: {{ .Values.deployment.strategy.type | quote }}
  selector:
    matchLabels:
      app: vhub
    {{- include "vhub.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: vhub
      {{- include "vhub.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - env:
        - name: KUBERNETES_CLUSTER_DOMAIN
          value: {{ quote .Values.kubernetesClusterDomain }}
        image: {{ .Values.deployment.vhub.image.repository }}:{{ .Values.deployment.vhub.image.tag
          | default .Chart.AppVersion }}
        name: vhub
        ports:
        - containerPort: 5000
        resources: {}
        securityContext: {{- toYaml .Values.deployment.vhub.containerSecurityContext |
          nindent 10 }}
        volumeMounts:
        - mountPath: /root/script_files/vhub
          name: data-volume
        - mountPath: /var/run/docker.sock
          name: docker-socket
        - mountPath: /usr/bin/docker
          name: docker-bin
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: {{ include "vhub.fullname" . }}-data-pvc
      - hostPath:
          path: /var/run/docker.sock
        name: docker-socket
      - hostPath:
          path: /usr/bin/docker
        name: docker-bin