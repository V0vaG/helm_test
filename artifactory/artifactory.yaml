apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
# -------------------------
# PostgreSQL for Artifactory
# -------------------------
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: artifactory-postgres-pv
  namespace: argocd
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 20Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: artifactory-postgres
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: artifactory-postgres
  template:
    metadata:
      labels:
        app: artifactory-postgres
    spec:
      containers:
        - name: postgres
          image: docker.io/postgres:15
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_DB
              value: artifactory
            - name: POSTGRES_USER
              value: artifactory
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: artifactory-db
                  key: artifactory-password
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              memory: "1Gi"
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: artifactory-postgres-pv
---
apiVersion: v1
kind: Service
metadata:
  name: artifactory-postgres
  namespace: argocd
spec:
  selector:
    app: artifactory-postgres
  ports:
    - name: postgres
      port: 5432
      targetPort: postgres
  type: ClusterIP
---
# -------------------------
# Artifactory (wired to Postgres)
# -------------------------
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: artifactory-data
  namespace: argocd
spec:
  accessModes: ["ReadWriteOnce"]
  resources:
    requests:
      storage: 50Gi
  storageClassName: local-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: artifactory
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app: artifactory
  template:
    metadata:
      labels:
        app: artifactory
    spec:
      securityContext:
        runAsUser: 1030
        runAsGroup: 1030
        fsGroup: 1030
        fsGroupChangePolicy: "OnRootMismatch"
      containers:
        - name: artifactory
          image: releases-docker.jfrog.io/jfrog/artifactory-oss:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: EXTRA_JAVA_OPTIONS
              value: "-Xms1g -Xmx1g"

            # ----- JFrog Shared DB (PostgreSQL) via env vars -----
            - name: JF_SHARED_DATABASE_TYPE
              value: "postgresql"
            - name: JF_SHARED_DATABASE_DRIVER
              value: "org.postgresql.Driver"
            - name: JF_SHARED_DATABASE_URL
              value: "jdbc:postgresql://artifactory-postgres.argocd.svc.cluster.local:5432/artifactory"
            - name: JF_SHARED_DATABASE_USERNAME
              value: "artifactory"
            - name: JF_SHARED_DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: artifactory-db
                  key: artifactory-password

          ports:
            - name: router
              containerPort: 8082
          volumeMounts:
            - name: data
              mountPath: /var/opt/jfrog/artifactory
            - name: master-key
              mountPath: /var/opt/jfrog/artifactory/var/etc/security/master.key
              subPath: master.key
              readOnly: true
          readinessProbe:
            httpGet:
              path: /
              port: router
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 36
          livenessProbe:
            httpGet:
              path: /
              port: router
            initialDelaySeconds: 300
            periodSeconds: 20
            timeoutSeconds: 5
            failureThreshold: 15
          resources:
            requests:
              cpu: "500m"
              memory: "2Gi"
            limits:
              memory: "4Gi"
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: artifactory-data
        - name: master-key
          secret:
            secretName: artifactory-master-key
            defaultMode: 0440   # group-readable for fsGroup
---
apiVersion: v1
kind: Service
metadata:
  name: artifactory
  namespace: argocd
spec:
  selector:
    app: artifactory
  type: NodePort
  ports:
    - name: http
      port: 8082
      targetPort: router
      nodePort: 30092
